{"version":3,"sources":["meteor://ðŸ’»app/lib/collections.js","meteor://ðŸ’»app/imports/editor/3d/SsePCDLoader.js","meteor://ðŸ’»app/server/SseDataWorkerServer.js","meteor://ðŸ’»app/server/api.js","meteor://ðŸ’»app/server/config.js","meteor://ðŸ’»app/server/files.js","meteor://ðŸ’»app/server/main.js"],"names":["Meteor","module","link","v","SseSamples","Mongo","Collection","SseProps","isServer","publish","imageUrl","find","url","$where","fields","file","export","default","SsePCDLoader","constructor","THREE","PCDLoader","serverMode","prototype","load","onLoad","onProgress","onError","scope","loader","FileLoader","manager","setResponseType","data","parse","decompressLZF","inData","outLength","inLength","length","outData","Uint8Array","inPtr","outPtr","ctrl","len","ref","Error","parseHeader","PCDheader","result1","search","result2","exec","substr","headerLen","str","replace","version","size","type","count","width","height","viewpoint","points","parseFloat","split","parseInt","map","x","tx","ty","tz","qw","qx","qy","qz","i","l","push","offset","sizeSum","rowSize","textData","Buffer","from","toString","LoaderUtils","decodeText","position","color","label","payload","rgb","meta","camPosition","Vector3","camQuaternion","Quaternion","pcdData","lines","pt","item","line","y","z","sub","applyQuaternion","undefined","classIndex","colorRGB","r","g","b","dataview","DataView","slice","compressedSize","getUint32","decompressedSize","decompressed","buffer","getFloat32","getUint8","row","geometry","BufferGeometry","setAttribute","Float32BufferAttribute","Uint8BufferAttribute","colorAtt","computeBoundingSphere","material","PointsMaterial","sizeAttenuation","mesh","Points","name","reverse","join","header","FastIntegerCompression","bytelog","val","computeCompressedSizeInBytes","input","c","answer","compress","buf","ArrayBuffer","view","Int8Array","pos","computeHowManyIntegers","uncompress","array","inbyte","end","LZW","uncompressed","dictionary","wc","w","result","dictSize","String","fromCharCode","charAt","hasOwnProperty","decompress","compressed","k","entry","objectToBytes","obj","JSON","stringify","bytesToObject","bytes","byteLength","exportDefault","SseDataWorkerServer","configurationFile","basename","readFile","WebApp","connectHandlers","use","generateJson","generatePCDOutput","bind","fileMode","imagesListing","imagesFolder","pointcloudsFolder","setsOfClassesMap","req","res","next","all","folder","tags","firstEditDate","lastEditDate","fetch","setHeader","findOne","soc","get","socName","objects","forEach","pcdFile","decodeURIComponent","fileName","labelFile","objectFile","charset","err","content","pcdContent","hasRgb","head","rgb2int","out","write","labelErr","labelContent","labels","objectErr","objectContent","objectsAvailable","objectByPointIndex","Map","objIndex","ptIdx","set","Math","floor","assignedObject","mkdirSync","existsSync","os","download","defaultClasses","init","config","settings","configuration","homedir","setsOfClasses","o","console","log","e","error","shell","serveStatic","bodyParser","createWriteStream","lstatSync","readdirSync","readFileSync","extname","demoMode","startup","fallthrough","raw","limit","fileToSave","dir","match","mkdir","wstream","body","ColorScheme","classes","methods","scheme","from_hue","variation","colors","concat","oc","pageIndex","pageLength","isDirectory","source","isImage","stat","isFile","isSymbolicLink","toLowerCase","getDirectories","filter","a","getImages","getImageDesc","path","editUrl","encodeURIComponent","folderSlash","getFolderDesc","leaf","existing","dirs","images","folders","imagesCount","nextPage","previousPage","sample","attrs","pathname","substring","lastIndexOf","Date","upsert","key","$addToSet","value","$each"],"mappings":"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","file":"/app.js","sourcesContent":["import {Meteor} from 'meteor/meteor';\n\nSseSamples = new Mongo.Collection(\"SseSamples\");\nSseProps = new Mongo.Collection(\"SseProps\");\n\nif (Meteor.isServer) {\n    Meteor.publish(\"sse-data-descriptor\", function (imageUrl) {\n        return SseSamples.find({url: imageUrl});\n    });\n\n    Meteor.publish(\"sse-labeled-images\", function () {\n        return SseSamples.find(\n            {$where: 'this.objects && this.objects.length>0'},\n            {fields: {file: 1, url: 1}},\n        );\n    });\n\n    Meteor.publish('sse-props', function () {\n        return SseProps.find({});\n    });\n}\n\n","// Based on three.js PCDLoader class (only support ASCII PCD files)\nexport default class SsePCDLoader {\n    constructor(THREE) {\n        THREE.PCDLoader = function (serverMode) {\n            this.serverMode = serverMode;\n        };\n\n        THREE.PCDLoader.prototype = {\n            constructor: THREE.PCDLoader,\n            load: function (url, onLoad, onProgress, onError) {\n                var scope = this;\n                var loader = new THREE.FileLoader(scope.manager);\n                loader.setResponseType('arraybuffer');\n                loader.load(url, function (data) {\n                    onLoad(scope.parse(data, url));\n                }, onProgress, onError);\n\n            },\n\n            parse: function (data, url) {\n                function decompressLZF( inData, outLength ) {\n                    // from https://gitlab.com/taketwo/three-pcd-loader/blob/master/decompress-lzf.js\n                    var inLength = inData.length;\n                    var outData = new Uint8Array( outLength );\n                    var inPtr = 0;\n                    var outPtr = 0;\n                    var ctrl;\n                    var len;\n                    var ref;\n                    do {\n                        ctrl = inData[ inPtr ++ ];\n                        if ( ctrl < ( 1 << 5 ) ) {\n                            ctrl ++;\n                            if ( outPtr + ctrl > outLength ) throw new Error( 'Output buffer is not large enough' );\n                            if ( inPtr + ctrl > inLength ) throw new Error( 'Invalid compressed data' );\n                            do {\n                                outData[ outPtr ++ ] = inData[ inPtr ++ ];\n                            } while ( -- ctrl );\n                        } else {\n                            len = ctrl >> 5;\n                            ref = outPtr - ( ( ctrl & 0x1f ) << 8 ) - 1;\n                            if ( inPtr >= inLength ) throw new Error( 'Invalid compressed data' );\n                            if ( len === 7 ) {\n                                len += inData[ inPtr ++ ];\n                                if ( inPtr >= inLength ) throw new Error( 'Invalid compressed data' );\n                            }\n                            ref -= inData[ inPtr ++ ];\n                            if ( outPtr + len + 2 > outLength ) throw new Error( 'Output buffer is not large enough' );\n                            if ( ref < 0 ) throw new Error( 'Invalid compressed data' );\n                            if ( ref >= outPtr ) throw new Error( 'Invalid compressed data' );\n                            do {\n                                outData[ outPtr ++ ] = outData[ ref ++ ];\n                            } while ( -- len + 2 );\n                        }\n                    } while ( inPtr < inLength );\n                    return outData;\n                }\n\n                function parseHeader(data) {\n                    var PCDheader = {};\n                    var result1 = data.search(/[\\r\\n]DATA\\s(\\S*)\\s/i);\n                    var result2 = /[\\r\\n]DATA\\s(\\S*)\\s/i.exec(data.substr(result1 - 1));\n                    PCDheader.data = result2[1];\n                    PCDheader.headerLen = result2[0].length + result1;\n                    PCDheader.str = data.substr(0, PCDheader.headerLen);\n\n                    // remove comments\n                    PCDheader.str = PCDheader.str.replace(/\\#.*/gi, '');\n\n                    // parse\n                    PCDheader.version = /VERSION (.*)/i.exec(PCDheader.str);\n                    PCDheader.fields = /FIELDS (.*)/i.exec(PCDheader.str);\n                    PCDheader.size = /SIZE (.*)/i.exec(PCDheader.str);\n                    PCDheader.type = /TYPE (.*)/i.exec(PCDheader.str);\n                    PCDheader.count = /COUNT (.*)/i.exec(PCDheader.str);\n                    PCDheader.width = /WIDTH (.*)/i.exec(PCDheader.str);\n                    PCDheader.height = /HEIGHT (.*)/i.exec(PCDheader.str);\n                    PCDheader.viewpoint = /VIEWPOINT (.*)/i.exec(PCDheader.str);\n                    PCDheader.points = /POINTS (.*)/i.exec(PCDheader.str);\n                    // evaluate\n                    if (PCDheader.version !== null)\n                        PCDheader.version = parseFloat(PCDheader.version[1]);\n                    if (PCDheader.fields !== null)\n                        PCDheader.fields = PCDheader.fields[1].split(' ');\n                    if (PCDheader.type !== null)\n                        PCDheader.type = PCDheader.type[1].split(' ');\n                    if (PCDheader.width !== null)\n                        PCDheader.width = parseInt(PCDheader.width[1]);\n                    if (PCDheader.height !== null)\n                        PCDheader.height = parseInt(PCDheader.height[1]);\n                    if (PCDheader.viewpoint !== null)\n                        PCDheader.viewpoint = PCDheader.viewpoint[1];\n                    if (PCDheader.points !== null)\n                        PCDheader.points = parseInt(PCDheader.points[1], 10);\n                    if (PCDheader.points === null)\n                        PCDheader.points = PCDheader.width * PCDheader.height;\n                    if (PCDheader.size !== null) {\n                        PCDheader.size = PCDheader.size[1].split(' ').map(function (x) {\n                            return parseInt(x, 10);\n                        });\n                    }\n\n                    const split = PCDheader.viewpoint.split(\" \");\n                    PCDheader.viewpoint = {\n                        tx: split[0], ty: split[1], tz: split[2],\n                        qw: split[3], qx: split[4], qy: split[5], qz: split[6]\n                    };\n                    if (PCDheader.count !== null) {\n                        PCDheader.count = PCDheader.count[1].split(' ').map(function (x) {\n                            return parseInt(x, 10);\n                        });\n                    } else {\n                        PCDheader.count = [];\n                        for (let i = 0, l = PCDheader.fields.length; i < l; i++) {\n                            PCDheader.count.push(1);\n                        }\n                    }\n\n                    PCDheader.offset = {};\n\n                    var sizeSum = 0;\n\n                    for (let i = 0, l = PCDheader.fields.length; i < l; i++) {\n                        if (PCDheader.data === 'ascii') {\n                            PCDheader.offset[PCDheader.fields[i]] = i;\n                        } else {\n                            PCDheader.offset[PCDheader.fields[i]] = sizeSum;\n                            sizeSum += PCDheader.size[i];\n                        }\n                    }\n                    PCDheader.rowSize = sizeSum;\n                    return PCDheader;\n                }\n\n                var textData = this.serverMode ? (Buffer.from(data)).toString() : THREE.LoaderUtils.decodeText(data);\n\n                // parse header (always ascii format)\n                var PCDheader = parseHeader(textData);\n\n                // parse data\n\n                var position = [];\n                var color = [];\n                var label = [];\n                var payload = [];\n                var rgb = [];\n\n                if (PCDheader.data === 'ascii') {\n                    const meta = PCDheader;\n\n                    let camPosition = new THREE.Vector3(parseFloat(meta.viewpoint.tx), parseFloat(meta.viewpoint.ty),\n                        parseFloat(meta.viewpoint.tz));\n                    let camQuaternion = new THREE.Quaternion(meta.viewpoint.qx,\n                        meta.viewpoint.qy, meta.viewpoint.qz, meta.viewpoint.qw);\n\n                    var offset = PCDheader.offset;\n\n                    var pcdData = textData.substr(PCDheader.headerLen);\n                    var lines = pcdData.split('\\n');\n                    let pt, item;\n                    for (var i = 0, l = lines.length - 1; i < l; i++) {\n                        if(lines[i] == \"\"){continue;}  // Sometimes empty lines are inserted...\n\n                        var line = lines[i].split(' ');\n                        item = {};\n                        payload.push(item);\n\n                        pt = new THREE.Vector3(parseFloat(line[offset.x]), parseFloat(line[offset.y]), parseFloat(line[offset.z]));\n\n                        if (!this.serverMode) {\n                            pt = pt.sub(camPosition);\n                            pt.applyQuaternion(camQuaternion);\n                        }\n\n                        item.x = pt.x;\n                        position.push(pt.x);\n\n                        item.y = pt.y;\n                        position.push(pt.y);\n                        item.z = pt.z;\n                        position.push(pt.z);\n\n                        if (offset.label !== undefined) {\n                            const classIndex = parseInt(line[offset.label]) || 0;\n                            item.classIndex = classIndex;\n                            label.push(classIndex);\n                        } else {\n                            item.classIndex = 0;\n                            label.push(0);\n                        }\n\n                        // Initialize colors\n                        if (offset.rgb != undefined) {\n                            var colorRGB = parseInt(line[offset.rgb]);\n                            var r = (colorRGB >> 16) & 0x0000ff;\n                            var g = (colorRGB >> 8) & 0x0000ff;\n                            var b = (colorRGB) & 0x0000ff;\n                            rgb.push([r, g, b]);\n                        }\n\n                        color.push(0);\n                        color.push(0);\n                        color.push(0);\n\n                    }\n                }\n\n                // binary-compressed\n                // normally data in PCD files are organized as array of structures: XYZRGBXYZRGB\n                // binary compressed PCD files organize their data as structure of arrays: XXYYZZRGBRGB\n                // that requires a totally different parsing approach compared to non-compressed data\n                if ( PCDheader.data === 'binary_compressed' ) {\n                    var dataview = new DataView( data.slice( PCDheader.headerLen, PCDheader.headerLen + 8 ) );\n                    var compressedSize = dataview.getUint32( 0, true );\n                    var decompressedSize = dataview.getUint32( 4, true );\n                    var decompressed = decompressLZF( new Uint8Array( data, PCDheader.headerLen + 8, compressedSize ), decompressedSize );\n                    dataview = new DataView( decompressed.buffer );\n\n                    var offset = PCDheader.offset;\n                    let pt, item;\n\n                    let camPosition = new THREE.Vector3(parseFloat(PCDheader.viewpoint.tx), parseFloat(PCDheader.viewpoint.ty),\n                        parseFloat(PCDheader.viewpoint.tz));\n                    let camQuaternion = new THREE.Quaternion(PCDheader.viewpoint.qx,\n                        PCDheader.viewpoint.qy, PCDheader.viewpoint.qz, PCDheader.viewpoint.qw);\n\n                    for ( var i = 0; i < PCDheader.points; i ++ ) {\n                        item = {};\n                        payload.push(item);\n\n                        const x = dataview.getFloat32( ( PCDheader.points * offset.x ) + PCDheader.size[ 0 ] * i, true );\n                        const y = dataview.getFloat32( ( PCDheader.points * offset.y ) + PCDheader.size[ 1 ] * i, true );\n                        const z = dataview.getFloat32( ( PCDheader.points * offset.z ) + PCDheader.size[ 2 ] * i, true );\n\n                        pt = new THREE.Vector3(x, y, z);\n\n                        if (!this.serverMode) {\n                            pt = pt.sub(camPosition);\n                            pt.applyQuaternion(camQuaternion);\n                        }\n\n                        item.x = pt.x;\n                        position.push(pt.x);\n\n                        item.y = pt.y;\n                        position.push(pt.y);\n                        item.z = pt.z;\n                        position.push(pt.z);\n\n                        if ( offset.label !== undefined ) {\n                            const classIndex = dataview.getUint8( PCDheader.points * offset.label + PCDheader.size[ 3 ] * i );\n                            item.classIndex = classIndex;\n                            label.push( classIndex );\n                        } else {\n                            item.classIndex = 0;\n                            label.push(0);\n                        }\n\n                        // Initialize colors\n                        if (offset.rgb != undefined) {\n                            var colorRGB = dataview.getUint32(row + offset.rgb, true);\n                            var r = (colorRGB >> 16) & 0x0000ff;\n                            var g = (colorRGB >> 8) & 0x0000ff;\n                            var b = (colorRGB) & 0x0000ff;\n                            rgb.push([r, g, b]);\n                        }\n\n                        color.push(0);\n                        color.push(0);\n                        color.push(0);\n                    }\n                }\n\n                // binary\n\n                if ( PCDheader.data === 'binary' ) {\n                    var dataview = new DataView( data, PCDheader.headerLen );\n                    var offset = PCDheader.offset;\n                    let pt, item;\n                    // test.push(offset);\n                    let camPosition = new THREE.Vector3(parseFloat(PCDheader.viewpoint.tx), parseFloat(PCDheader.viewpoint.ty),\n                        parseFloat(PCDheader.viewpoint.tz));\n                    let camQuaternion = new THREE.Quaternion(PCDheader.viewpoint.qx,\n                        PCDheader.viewpoint.qy, PCDheader.viewpoint.qz, PCDheader.viewpoint.qw);\n\n                    for ( var i = 0, row = 0; i < PCDheader.points; i ++, row += PCDheader.rowSize ) {\n                        item = {};\n                        payload.push(item);\n\n                        const x = dataview.getFloat32( row + offset.x, true );\n                        const y = dataview.getFloat32( row + offset.y, true );\n                        const z = dataview.getFloat32( row + offset.z, true );\n\n                        pt = new THREE.Vector3(x, y, z);\n\n                        if (!this.serverMode) {\n                            pt = pt.sub(camPosition);\n                            pt.applyQuaternion(camQuaternion);\n                        }\n\n                        item.x = pt.x;\n                        position.push(pt.x);\n\n                        item.y = pt.y;\n                        position.push(pt.y);\n                        item.z = pt.z;\n                        position.push(pt.z);\n\n                        if ( offset.label !== undefined ) {\n                            const classIndex = dataview.getUint8( row + offset.label );\n                            item.classIndex = classIndex;\n                            label.push(classIndex);\n                        } else {\n                            item.classIndex = 0;\n                            label.push(0);\n                        }\n\n                        // Initialize colors\n                        if (offset.rgb != undefined) {\n                            var colorRGB = dataview.getUint32(row + offset.rgb, true);\n                            var r = (colorRGB >> 16) & 0x0000ff;\n                            var g = (colorRGB >> 8) & 0x0000ff;\n                            var b = (colorRGB) & 0x0000ff;\n                            rgb.push([r, g, b]);\n                        }\n\n                        color.push(0);\n                        color.push(0);\n                        color.push(0);\n                    }\n                }\n\n                // build geometry\n\n                var geometry = new THREE.BufferGeometry();\n\n                if (position.length > 0)\n                    geometry.setAttribute('position', new THREE.Float32BufferAttribute(position, 3));\n                if (label.length > 0)\n                    geometry.setAttribute('label', new THREE.Uint8BufferAttribute(label, 3));\n                if (color.length > 0) {\n                    const colorAtt = new THREE.Float32BufferAttribute(color, 3);\n                    geometry.setAttribute('color', colorAtt);\n                }\n\n                geometry.computeBoundingSphere();\n\n                var material = new THREE.PointsMaterial({size: 2, color: 0xE9A96F});\n                material.sizeAttenuation = false;\n\n                // build mesh\n                var mesh = new THREE.Points(geometry, material);\n                var name = url.split('').reverse().join('');\n                name = /([^\\/]*)/.exec(name);\n                name = name[1].split('').reverse().join('');\n                mesh.name = url;\n                return {position, label, header: PCDheader, rgb};\n            }\n\n        };\n\n    }\n}\n","\nfunction FastIntegerCompression() {\n}\n\nfunction bytelog(val) {\n    if (val < (1 << 7)) {\n        return 1;\n    } else if (val < (1 << 14)) {\n        return 2;\n    } else if (val < (1 << 21)) {\n        return 3;\n    } else if (val < (1 << 28)) {\n        return 4;\n    }\n    return 5;\n}\n\n// compute how many bytes an array of integers would use once compressed\nFastIntegerCompression.computeCompressedSizeInBytes = function(input) {\n    var c = input.length;\n    var answer = 0;\n    for(var i = 0; i < c; i++) {\n        answer += bytelog(input[i]);\n    }\n    return answer;\n};\n\n\n// compress an array of integers, return a compressed buffer (as an ArrayBuffer)\nFastIntegerCompression.compress = function(input) {\n    var c = input.length;\n    var buf = new ArrayBuffer(FastIntegerCompression.computeCompressedSizeInBytes(input));\n    var view   = new Int8Array(buf);\n    var pos = 0;\n    for(var i = 0; i < c; i++) {\n        var val = input[i];\n        if (val < (1 << 7)) {\n            view[pos++] = val ;\n        } else if (val < (1 << 14)) {\n            view[pos++] = (val & 0x7F) | 0x80;\n            view[pos++] = val >>> 7;\n        } else if (val < (1 << 21)) {\n            view[pos++] = (val & 0x7F) | 0x80;\n            view[pos++] = ( (val >>> 7) & 0x7F ) | 0x80;\n            view[pos++] = val >>> 14;\n        } else if (val < (1 << 28)) {\n            view[pos++] = (val & 0x7F ) | 0x80 ;\n            view[pos++] = ( (val >>> 7) & 0x7F ) | 0x80;\n            view[pos++] = ( (val >>> 14) & 0x7F ) | 0x80;\n            view[pos++] = val >>> 21;\n        } else {\n            view[pos++] = ( val & 0x7F ) | 0x80;\n            view[pos++] = ( (val >>> 7) & 0x7F ) | 0x80;\n            view[pos++] = ( (val >>> 14) & 0x7F ) | 0x80;\n            view[pos++] = ( (val >>> 21) & 0x7F ) | 0x80;\n            view[pos++] = val >>> 28;\n        }\n    }\n    return buf;\n};\n\n// from a compressed array of integers stored ArrayBuffer, compute the number of compressed integers by scanning the input\nFastIntegerCompression.computeHowManyIntegers = function(input) {\n    var view   = new Int8Array(input);\n    var c = view.length;\n    var count = 0;\n    for(var i = 0; i < c; i++) {\n        count += (input[i]>>>7);\n    }\n    return c - count;\n};\n// uncompress an array of integer from an ArrayBuffer, return the array\nFastIntegerCompression.uncompress = function(input) {\n    var array = [];\n    var inbyte = new Int8Array(input);\n    var end = inbyte.length;\n    var pos = 0;\n\n    while (end > pos) {\n        var c = inbyte[pos++];\n        var v = c & 0x7F;\n        if (c >= 0) {\n            array.push(v);\n            continue;\n        }\n        c = inbyte[pos++];\n        v |= (c & 0x7F) << 7;\n        if (c >= 0) {\n            array.push(v);\n            continue;\n        }\n        c = inbyte[pos++];\n        v |= (c & 0x7F) << 14;\n        if (c >= 0) {\n            array.push(v);\n            continue;\n        }\n        c = inbyte[pos++];\n        v |= (c & 0x7F) << 21;\n        if (c >= 0) {\n            array.push(v);\n            continue;\n        }\n        c = inbyte[pos++];\n        v |= c << 28;\n        array.push(v)\n    }\n    return array;\n};\n\nLZW = {\n    compress: function (uncompressed) {\n        \"use strict\";\n        // Build the dictionary.\n        var i,\n            dictionary = {},\n            c,\n            wc,\n            w = \"\",\n            result = [],\n            dictSize = 256;\n        for (i = 0; i < 256; i += 1) {\n            dictionary[String.fromCharCode(i)] = i;\n        }\n\n        for (i = 0; i < uncompressed.length; i += 1) {\n            c = uncompressed.charAt(i);\n            wc = w + c;\n            //Do not use dictionary[wc] because javascript arrays\n            //will return values for array['pop'], array['push'] etc\n            // if (dictionary[wc]) {\n            if (dictionary.hasOwnProperty(wc)) {\n                w = wc;\n            } else {\n                result.push(dictionary[w]);\n                // Add wc to the dictionary.\n                dictionary[wc] = dictSize++;\n                w = String(c);\n            }\n        }\n\n        // Output the code for w.\n        if (w !== \"\") {\n            result.push(dictionary[w]);\n        }\n        return result;\n    },\n\n\n    decompress: function (compressed) {\n        \"use strict\";\n        // Build the dictionary.\n        var i,\n            dictionary = [],\n            w,\n            result,\n            k,\n            entry = \"\",\n            dictSize = 256;\n        for (i = 0; i < 256; i += 1) {\n            dictionary[i] = String.fromCharCode(i);\n        }\n\n        w = String.fromCharCode(compressed[0]);\n        result = w;\n        for (i = 1; i < compressed.length; i += 1) {\n\n            k = compressed[i];\n            if (dictionary[k]) {\n                entry = dictionary[k];\n            } else {\n                if (k === dictSize) {\n                    entry = w + w.charAt(0);\n                } else {\n                    return null;\n                }\n            }\n\n            result += entry;\n\n            dictionary[dictSize++] = w + entry.charAt(0);\n\n            w = entry;\n        }\n        return result;\n    }\n};\n\nfunction objectToBytes(obj){\n    let payload = JSON.stringify(obj);\n    payload = LZW.compress(payload);\n    payload = FastIntegerCompression.compress(payload);\n    return payload;\n}\n\nfunction bytesToObject(bytes){\n\n    if (bytes.byteLength  > 0) {\n        const data = FastIntegerCompression.uncompress(bytes);\n        const str = LZW.decompress(data);\n        return JSON.parse(str);\n    }else return null;\n}\n\nexport default {\n    compress: (data)=>(objectToBytes(data)),\n    uncompress: (data)=>(bytesToObject(data))\n};\n","import SseDataWorkerServer from \"./SseDataWorkerServer\";\nimport configurationFile from \"./config\";\nimport {basename} from \"path\";\nimport {readFile} from \"fs\";\nimport * as THREE from 'three';\nimport SsePCDLoader from \"../imports/editor/3d/SsePCDLoader\";\n\nWebApp.connectHandlers.use(\"/api/json\", generateJson);\nWebApp.connectHandlers.use(\"/api/pcdtext\", generatePCDOutput.bind({fileMode: false}));\nWebApp.connectHandlers.use(\"/api/pcdfile\", generatePCDOutput.bind({fileMode: true}));\nWebApp.connectHandlers.use(\"/api/listing\", imagesListing);\n\nconst {imagesFolder, pointcloudsFolder, setsOfClassesMap} = configurationFile;\nnew SsePCDLoader(THREE);\n\nfunction imagesListing(req, res, next) {\n    const all = SseSamples.find({}, {\n        fields: {\n            url: 1,\n            folder: 1,\n            file: 1,\n            tags: 1,\n            firstEditDate: 1,\n            lastEditDate: 1\n        }\n    }).fetch();\n    res.end(JSON.stringify(all, null, 1));\n}\n\nfunction generateJson(req, res, next) {\n    res.setHeader('Content-Type', 'application/json');\n    const item = SseSamples.findOne({url: req.url});\n    if (item) {\n        const soc = setsOfClassesMap.get(item.socName);\n        item.objects.forEach(obj => {\n            obj.label = soc.objects[obj.classIndex].label;\n        });\n        res.end(JSON.stringify(item, null, 1));\n    }else{\n        res.end(\"{}\");\n    }\n}\n\nfunction generatePCDOutput(req, res, next) {\n    const pcdFile = imagesFolder + decodeURIComponent(req.url);\n    const fileName = basename(pcdFile);\n    const labelFile = pointcloudsFolder + decodeURIComponent(req.url) + \".labels\";\n    const objectFile = pointcloudsFolder + decodeURIComponent(req.url) + \".objects\";\n\n    if (this.fileMode) {\n        res.setHeader('Content-disposition', 'attachment; filename=DOC'.replace(\"DOC\", fileName));\n        res.setHeader('Content-type', 'text/plain');\n        res.charset = 'UTF-8';\n    }\n\n\n    readFile(pcdFile, (err, content) => {\n        if (err) {\n            res.end(\"Error while parsing PCD file.\")\n        }\n\n        const loader = new THREE.PCDLoader(true);\n        const pcdContent = loader.parse(content.buffer, \"\");\n        const hasRgb = pcdContent.rgb.length > 0;\n        const head = pcdContent.header;\n        const rgb2int = rgb => rgb[2] + 256 * rgb[1] + 256 * 256 * rgb[0];\n\n        let out = \"VERSION .7\\n\";\n        out += hasRgb ? \"FIELDS x y z rgb label object\\n\" : \"FIELDS x y z label object\\n\";\n        out += hasRgb ? \"SIZE 4 4 4 4 4 4\\n\" : \"SIZE 4 4 4 4 4\\n\";\n        out += hasRgb ? \"TYPE F F F I I I\\n\" : \"TYPE F F F I I\\n\";\n        out += hasRgb ? \"COUNT 1 1 1 1 1 1\\n\" : \"COUNT 1 1 1 1 1\\n\";\n        out += \"WIDTH \" + pcdContent.header.width + \"\\n\";\n        out += \"HEIGHT \" + pcdContent.header.height + \"\\n\";\n        out += \"POINTS \" + pcdContent.header.width*pcdContent.header.height + \"\\n\";\n        out += \"VIEWPOINT \" + head.viewpoint.tx;\n        out += \" \" + head.viewpoint.ty;\n        out += \" \" + head.viewpoint.tz;\n        out += \" \" + head.viewpoint.qw;\n        out += \" \" + head.viewpoint.qx;\n        out += \" \" + head.viewpoint.qy;\n        out += \" \" + head.viewpoint.qz + \"\\n\";\n        out += \"DATA ascii\\n\";\n        res.write(out);\n        out = \"\";\n        readFile(labelFile, (labelErr, labelContent) => {\n            if (labelErr) {\n                res.end(\"Error while parsing labels file.\")\n            }\n            const labels = SseDataWorkerServer.uncompress(labelContent);\n\n            readFile(objectFile, (objectErr, objectContent) => {\n                let objectsAvailable = true;\n                if (objectErr) {\n                    objectsAvailable = false;\n                }\n\n                const objectByPointIndex = new Map();\n\n                if (objectsAvailable) {\n                    const objects = SseDataWorkerServer.uncompress(objectContent);\n                    objects.forEach((obj, objIndex) => {\n                        obj.points.forEach(ptIdx => {\n                            objectByPointIndex.set(ptIdx, objIndex);\n                        })\n                    });\n                }\n                let obj;\n\n                pcdContent.position.forEach((v, i) => {\n                    const position = Math.floor(i / 3);\n\n                    switch (i % 3) {\n                        case 0:\n                            if (hasRgb) {\n                                obj = {rgb: pcdContent.rgb[position], x: v};\n                            }else{\n                                obj = {x: v};\n                            }\n                            break;\n                        case 1:\n                            obj.y = v;\n                            break;\n                        case 2:\n                            obj.z = v;\n                            out += obj.x + \" \" + obj.y + \" \" + obj.z + \" \";\n                            if (hasRgb) {\n                                out += rgb2int(obj.rgb) + \" \";\n                            }\n                            out += labels[position] + \" \";\n                            const assignedObject = objectByPointIndex.get(position);\n                            if (assignedObject != undefined)\n                                out += assignedObject;\n                            else\n                                out += \"-1\";\n                            out += \"\\n\";\n                            res.write(out);\n                            out = \"\";\n                            break;\n                    }\n                });\n\n                res.end()\n            })\n        });\n    });\n}\n","import {Meteor} from \"meteor/meteor\";\nimport {join} from \"path\";\nimport {mkdirSync, existsSync} from \"fs\";\nimport os from \"os\";\nimport download from \"download\";\n\nconst configurationFile = {};\nconst defaultClasses = [{\n    \"name\": \"33 Classes\", \"objects\": [\n        {\"label\": \"VOID\", \"color\": \"#CFCFCF\"},\n        {\"label\": \"Class 1\"},\n        {\"label\": \"Class 2\"},\n        {\"label\": \"Class 3\"},\n        {\"label\": \"Class 4\"},\n        {\"label\": \"Class 5\"},\n        {\"label\": \"Class 6\"},\n        {\"label\": \"Class 7\"},\n        {\"label\": \"Class 8\"},\n        {\"label\": \"Class 9\"},\n        {\"label\": \"Class 10\"},\n        {\"label\": \"Class 11\"},\n        {\"label\": \"Class 12\"},\n        {\"label\": \"Class 13\"},\n        {\"label\": \"Class 14\"},\n        {\"label\": \"Class 15\"},\n        {\"label\": \"Class 16\"},\n        {\"label\": \"Class 17\"},\n        {\"label\": \"Class 18\"},\n        {\"label\": \"Class 19\"},\n        {\"label\": \"Class 20\"},\n        {\"label\": \"Class 21\"},\n        {\"label\": \"Class 22\"},\n        {\"label\": \"Class 23\"},\n        {\"label\": \"Class 24\"},\n        {\"label\": \"Class 25\"},\n        {\"label\": \"Class 26\"},\n        {\"label\": \"Class 27\"},\n        {\"label\": \"Class 28\"},\n        {\"label\": \"Class 29\"},\n        {\"label\": \"Class 30\"},\n        {\"label\": \"Class 31\"},\n        {\"label\": \"Class 32\"}\n    ]\n}];\nconst init = ()=> {\n    try {\n        const config = Meteor.settings;\n\n        if (config.configuration && config.configuration[\"images-folder\"] != \"\") {\n            configurationFile.imagesFolder = config.configuration[\"images-folder\"].replace(/\\/$/, \"\");\n        }else{\n            configurationFile.imagesFolder = join(os.homedir(), \"sse-images\");\n        }\n\n        if (!existsSync(configurationFile.imagesFolder)){\n            mkdirSync(configurationFile.imagesFolder);\n            download(\"https://raw.githubusercontent.com/Hitachi-Automotive-And-Industry-Lab/semantic-segmentation-editor/master/private/samples/bitmap_labeling.png\", configurationFile.imagesFolder);\n            download(\"https://raw.githubusercontent.com/Hitachi-Automotive-And-Industry-Lab/semantic-segmentation-editor/master/private/samples/pointcloud_labeling.pcd\", configurationFile.imagesFolder);\n        }\n\n        if (config.configuration && config.configuration[\"internal-folder\"] != \"\") {\n            configurationFile.pointcloudsFolder = config.configuration[\"internal-folder\"].replace(/\\/$/, \"\");\n        }else{\n\n            configurationFile.pointcloudsFolder = join(os.homedir(), \"sse-internal\");\n        }\n\n        configurationFile.setsOfClassesMap = new Map();\n        configurationFile.setsOfClasses = config[\"sets-of-classes\"];\n        if (!configurationFile.setsOfClasses){\n            configurationFile.setsOfClasses = defaultClasses;\n        }\n        configurationFile.setsOfClasses.forEach(o => configurationFile.setsOfClassesMap.set(o.name, o));\n        console.log(\"Semantic Segmentation Editor\");\n        console.log(\"Images (JPG, PNG, PCD) served from\", configurationFile.imagesFolder);\n        console.log(\"PCD binary segmentation data stored in\", configurationFile.pointcloudsFolder);\n        console.log(\"Number of available sets of object classes:\", configurationFile.setsOfClasses.length);\n        return configurationFile;\n    }catch(e){\n        console.error(\"Error while parsing settings.json:\", e);\n    }\n};\nexport default init();\n","import {Meteor} from \"meteor/meteor\";\nimport shell from \"shelljs\";\nimport serveStatic from \"serve-static\";\nimport bodyParser from \"body-parser\";\nimport {createWriteStream, lstatSync, readdirSync, readFile, readFileSync} from \"fs\";\nimport {basename, extname, join} from \"path\";\nimport configurationFile from \"./config\";\nconst demoMode = Meteor.settings.configuration[\"demo-mode\"];\n\nMeteor.startup(() => {\n\nconst {imagesFolder, pointcloudsFolder} = configurationFile;\n    WebApp.connectHandlers.use(\"/file\", serveStatic(imagesFolder, {fallthrough: false}));\n    WebApp.connectHandlers.use(\"/datafile\", serveStatic(pointcloudsFolder, {fallthrough: true}));\n    WebApp.connectHandlers.use(\"/datafile\", (req,res)=>{\n        res.end(\"\");\n    });\n\n    WebApp.connectHandlers.use(bodyParser.raw({limit: \"200mb\", type: 'application/octet-stream'}));\n    WebApp.connectHandlers.use('/save', function (req, res) {\n        if (demoMode) return;\n        const fileToSave = pointcloudsFolder + decodeURIComponent(req.url).replace(\"/save\", \"\");\n        const dir = fileToSave.match(\"(.*\\/).*\")[1];\n        shell.mkdir('-p', dir);\n\n        var wstream = createWriteStream(fileToSave);\n        wstream.write(req.body);\n        wstream.end();\n        res.setHeader('Content-Type', 'application/octet-stream');\n        res.setHeader(\"Access-Control-Allow-Origin\", \"*\");\n        res.setHeader(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept\");\n        res.end(\"Sent: \" + fileToSave);\n    });\n});\n","import {Meteor} from 'meteor/meteor';\nimport {createWriteStream, lstatSync, readdirSync, readFile, readFileSync, existsSync} from \"fs\";\nimport {basename, extname, join} from \"path\";\nimport url from \"url\";\nimport ColorScheme from \"color-scheme\";\nimport config from \"./config\";\nconst demoMode = Meteor.settings.configuration[\"demo-mode\"];\n\nlet {classes} = config;\n\nMeteor.methods({\n    'getClassesSets'() {\n        const data = config.setsOfClasses;\n        const scheme = new ColorScheme;\n        scheme.from_hue(0)         // Start the scheme\n            .scheme('tetrade')     // Use the 'triade' scheme, that is, colors\n            // selected from 3 points equidistant around\n            // the color wheel.\n            .variation('soft');   // Use the 'soft' color variation\n        let colors = scheme.colors();\n        scheme.from_hue(10)         // Start the scheme\n            .scheme('tetrade')     // Use the 'triade' scheme, that is, colors\n            // selected from 3 points equidistant around\n            // the color wheel.\n            .variation('pastel');   // Use the 'soft' color variation\n        colors = colors.concat(scheme.colors());\n        scheme.from_hue(20)         // Start the scheme\n            .scheme('tetrade')     // Use the 'triade' scheme, that is, colors\n            // selected from 3 points equidistant around\n            // the color wheel.\n            .variation('hard');   // Use the 'soft' color variation\n        colors = colors.concat(scheme.colors());\n        scheme.from_hue(30)         // Start the scheme\n            .scheme('tetrade')     // Use the 'triade' scheme, that is, colors\n            // selected from 3 points equidistant around\n            // the color wheel.\n            .variation('hard');   // Use the 'soft' color variation\n        colors = colors.concat(scheme.colors());\n        scheme.from_hue(40)         // Start the scheme\n            .scheme('tetrade')     // Use the 'triade' scheme, that is, colors\n            // selected from 3 points equidistant around\n            // the color wheel.\n            .variation('hard');   // Use the 'soft' color variation\n        colors = colors.concat(scheme.colors());\n        colors = colors.map(c => \"#\" + c);\n        data.forEach(soc => {\n            soc.objects.forEach((oc, i) => {\n                if (!oc.color) {\n                    oc.color = colors[i];\n                }\n            })\n        });\n        return data;\n    },\n    /*\n        'rebuildTagList'() {\n            const all = SseSamples.find().fetch();\n            const tags = new Set();\n            all.forEach(s => {\n                if (s.tags) {\n                    s.tags.forEach(t => {\n                        tags.add(t)\n                    })\n                }\n            });\n            SseProps.remove({});\n            SseProps.upsert({key: \"tags\"}, {key: \"tags\", value: Array.from(tags)});\n        },\n    */\n    'images'(folder, pageIndex, pageLength) {\n        const isDirectory = source => lstatSync(source).isDirectory();\n        const isImage = source => {\n            const stat = lstatSync(source);\n            return (stat.isFile() || stat.isSymbolicLink()) &&\n                (\n                    extname(source).toLowerCase() == \".bmp\" ||\n                    extname(source).toLowerCase() == \".jpeg\" ||\n                    extname(source).toLowerCase() == \".jpg\" ||\n                    extname(source).toLowerCase() == \".pcd\" ||\n                    extname(source).toLowerCase() == \".png\"\n                )\n        };\n        const getDirectories = source =>\n            readdirSync(source).map(name => join(source, name)).filter(isDirectory).map(a => basename(a));\n\n        const getImages = source =>\n            readdirSync(source).map(name => join(source, name)).filter(isImage);\n\n        const getImageDesc = path => {\n            return {\n                name: basename(path),\n                editUrl: \"/edit/\" + encodeURIComponent(folderSlash + basename(path)),\n                url: (folderSlash ? \"/\" + folderSlash : \"\") + \"\" + basename(path)\n            };\n        };\n\n        const getFolderDesc = (path) => {\n            return {\n                name: basename(path),\n                url: `/browse/${pageIndex}/${pageLength}/` + encodeURIComponent(folderSlash + path)\n            }\n        };\n\n        pageIndex = parseInt(pageIndex);\n        pageLength = parseInt(pageLength);\n        const folderSlash = folder ? decodeURIComponent(folder) + \"/\" : \"/\";\n        const leaf = join(config.imagesFolder, (folderSlash ? folderSlash : \"\"));\n\n        const existing = existsSync(leaf);\n\n        if (existing && !isDirectory(leaf)) {\n            return {error: leaf + \" is a file but should be a folder. Check the documentation and your settings.json\"};\n        }\n        if (!existing) {\n            return {error: leaf + \" does not exists. Check the documentation and your settings.json\"};\n        }\n\n        const dirs = getDirectories(leaf);\n        const images = getImages(leaf);\n        const res = {\n            folders: dirs.map(getFolderDesc),\n            images: images.map(getImageDesc).slice(pageIndex * pageLength, pageIndex * pageLength + pageLength),\n            imagesCount: images.length\n        };\n\n        if (pageIndex * pageLength + pageLength < images.length) {\n            res.nextPage = `/browse/${pageIndex + 1}/${pageLength}/` + (folder ? encodeURIComponent(folder) : \"\");\n        }\n        if (pageIndex > 0) {\n            res.previousPage = `/browse/${pageIndex - 1}/${pageLength}/` + (folder ? encodeURIComponent(folder) : \"\");\n        }\n\n        return res;\n    },\n\n    'saveData'(sample) {\n        if (demoMode) return;\n        const attrs = url.parse(sample.url);\n        let path = decodeURIComponent(attrs.pathname);\n        sample.folder = path.substring(1, path.lastIndexOf(\"/\"));\n        sample.file = path.substring(path.lastIndexOf(\"/\") + 1);\n        sample.lastEditDate = new Date();\n        if (!sample.firstEditDate)\n            sample.firstEditDate = new Date();\n        if (sample.tags) {\n            SseProps.upsert({key: \"tags\"}, {$addToSet: {value: {$each: sample.tags}}});\n        }\n        SseSamples.upsert({url: sample.url}, sample);\n    }\n});\n"]}